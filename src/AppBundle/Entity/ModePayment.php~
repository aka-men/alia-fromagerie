<?php

namespace AppBundle\Entity;

use CoreBundle\Entity\Traits\ArchiveTrait;
use Doctrine\ORM\Mapping as ORM;
use CoreBundle\Entity\MappedSuperClass\AbstractEntity;
use CoreBundle\Entity\Traits\LabelTrait;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * ModePayment
 *
 * @UniqueEntity(
 *     fields="label",
 *     message="Le libellé '{{ value }}' est déjà utilisé"
 * )
 * @ORM\Table(name="mode_payment")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\ModePaymentRepository")
 */
class ModePayment extends AbstractEntity
{
   use LabelTrait;
   use ArchiveTrait;

    /**
     * @var integer
     *
     * @ORM\Column(name="ordre", type="integer",nullable=true)
     */
    protected $ordre;

    /**
     * @var string
     *
     * @ORM\Column(name="code", type="string", length=3, nullable=true)
     */
    private $code;

    /**
     * Set ordre
     *
     * @param integer $ordre
     *
     * @return ModePayment
     */
    public function setOrdre($ordre)
    {
        $this->ordre = $ordre;

        return $this;
    }

    /**
     * Get ordre
     *
     * @return integer
     */
    public function getOrdre()
    {
        return $this->ordre;
    }

    /**
     * Set code
     *
     * @param string $code
     *
     * @return ModePayment
     */
    public function setCode($code)
    {
        $this->code = strtoupper(substr($code,0,3));

        return $this;
    }

    /**
     * Get code
     *
     * @return string
     */
    public function getCode()
    {
        return is_null($this->code) ? strtoupper(substr($this->getLabel(),0,3)) : strtoupper($this->code);
    }
}
