<?php

namespace AppBundle\Repository;

use CoreBundle\Repository\CustomRepository;

/**
 * ProduitAchatRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitAchatRepository extends CustomRepository
{
    function report(array $criteres){
        $qb = $this->_em->createQueryBuilder();
        $qb
            ->from($this->getEntityName(),'pa')
            ->join('pa.produit','p')
            ->join('pa.achat','a')
            ->select('pa')
            ->orderBy('a.date','DESC')
        ;
        $operateur = 'where';

        if(isset($criteres['type'])){
            if($criteres['type'] === 'MP'){
                $qb->$operateur('p.isMatierePremiere = 1')
                ;
                $operateur = "andWhere";
            }
            if($criteres['type'] === 'PI'){
                $qb->$operateur('(p.isMatierePremiere = 0 OR p.isMatierePremiere is NULL)')
                ;
                $operateur = "andWhere";
            }
        }

        if (isset($criteres["produit"])) {
            $qb->$operateur("p.id = :produit")
                ->setParameter("produit", $criteres["produit"])
            ;
            $operateur = "andWhere";
        }


        if (isset($criteres["mois"])) {
            $qb->$operateur("month(a.date) = :mois")
                ->setParameter("mois", $criteres["mois"])
            ;
            $operateur = "andWhere";
        }

        if (isset($criteres["annee"])){
            $qb->$operateur("year(a.date) = :annee")
                ->setParameter("annee", $criteres["annee"])
            ;
            $operateur = "andWhere";
        }

        if(isset($criteres['date_start']) and isset($criteres['date_end'])){
            $date_start = date_create_from_format('d/m/Y', $criteres["date_start"]);
            $date_start->setTime(0, 0, 0);
            $date_end = date_create_from_format('d/m/Y', $criteres["date_end"]);
            $date_end->setTime(23, 59, 59);
            $qb->$operateur("a.date >= :dateStart")
                ->setParameter("dateStart", $date_start)
            ;
            $operateur = "andWhere";
            $qb->$operateur("a.date <= :dateEnd")
                ->setParameter("dateEnd", $date_end)
            ;
            $operateur = 'andWhere';
        }

        if(isset($criteres['has_invoice'])){
            if($criteres['has_invoice'] === true){
                $qb->$operateur('a.numeroFacture is not null');
                $operateur = 'andWhere';
            }
            if($criteres['has_invoice'] === false){
                $qb->$operateur('a.numeroFacture is null');
                $operateur = 'andWhere';
            }
        }

        if(isset($criteres['is_vaucher'])){
            if($criteres['is_vaucher'] === true){
                $qb->$operateur('a.isVaucher = 1');
                $operateur = 'andWhere';
            }
            if($criteres['is_vaucher'] === false){
                $qb->$operateur('(a.isVaucher is null or a.isVaucher = 0)');
                $operateur = 'andWhere';
            }
        }

        return $qb->getQuery()->getResult();
    }
}
