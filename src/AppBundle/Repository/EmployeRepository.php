<?php

namespace AppBundle\Repository;

use CoreBundle\Repository\CustomRepository;

/**
 * EmployeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmployeRepository extends CustomRepository
{
    function listeDataTable(array $criteres, $sort, $dir, $start = 0, $max = 10) {
        $qb = $this->_em->createQueryBuilder();
        $qb
            ->from($this->_entityName, "e")
        ;
        $total = $qb->select("COUNT(e)")->getQuery()->getSingleScalarResult();
        $operateur = "where";

        if (isset($criteres["archive"])) {
            $qb->$operateur("e.archive = :archive")
                ->setParameter("archive", $criteres["archive"])
            ;
            $operateur = "andWhere";
        }
        if (isset($criteres["id"])) {
            $qb->$operateur("e.id = :id")
                ->setParameter("id", $criteres["id"])
            ;
            $operateur = "andWhere";
        }
        if (isset($criteres["nom"])) {
            $qb->$operateur("e.nom LIKE :nom")
                ->setParameter("nom", "%".$criteres["nom"]."%")
            ;
            $operateur = "andWhere";
        }
        if (isset($criteres["prenom"])) {
            $qb->$operateur("e.nom LIKE :prenom")
                ->setParameter("prenom", "%".$criteres["prenom"]."%")
            ;
            $operateur = "andWhere";
        }
        if (isset($criteres["cin"])) {
            $qb->$operateur("e.cin LIKE :cin")
                ->setParameter("cin", "%".$criteres["cin"]."%")
            ;
            $operateur = "andWhere";
        }
        if (isset($criteres["fonction"])) {
            $qb->$operateur("e.fonction LIKE :fonction")
                ->setParameter("fonction", "%".$criteres["fonction"]."%")
            ;
            $operateur = "andWhere";
        }
        if (isset($criteres["autre"])) {
            $qb->$operateur("(e.email LIKE :autre OR "
                ."e.gsm LIKE :autre OR "
                ."e.email1 LIKE :autre OR "
                ."e.gsm1 LIKE :autre OR "
                ."e.adresse LIKE :autre OR "
                ."e.salaire LIKE :autre OR "
                ."e.autres LIKE :autre)"
            )
                ->setParameter("autre", "%".$criteres["autre"]."%")
            ;
            $operateur = "andWhere";
        }

        $totalFiltred =  $qb->select("COUNT(e)")->getQuery()->getSingleScalarResult();

        $employes = $qb
            ->select('DISTINCT e')
            ->setFirstResult($start)
            ->setMaxResults($max)
            ->orderBy($sort, $dir)
            ->getQuery()->getResult()
        ;
        return array("total" => $total, "totalFiltred" => $totalFiltred, "employes" => $employes);
    }
}
