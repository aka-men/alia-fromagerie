<?php

namespace AppBundle\Repository;

use CoreBundle\Repository\CustomRepository;

/**
 * FournisseurRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FournisseurRepository extends CustomRepository
{
    function listeDataTableOther(array $criteres, $sort, $dir, $start = 0, $max = 25) {
        $qb = $this->_em->createQueryBuilder();
        $qb
            ->from($this->_entityName, "f")
            ->where('(f.typeVente is NULL OR f.typeVente = 0)')
        ;

        $total = $qb->select("COUNT(f)")->getQuery()->getSingleScalarResult();
        $operateur = 'andWhere';
        if(isset($criteres['ce'])){
            $qb
                ->$operateur('f.idCE = :ce')
                ->setParameter('ce',$criteres['ce'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['fiscale'])){
            $qb
                ->$operateur('f.idFiscale = :fiscale')
                ->setParameter('fiscale',$criteres['fiscale'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['patente'])){
            $qb
                ->$operateur('f.patente = :patente')
                ->setParameter('patente',$criteres['patente'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['nom'])){
            $qb
                ->$operateur('f.nom = :nom')
                ->setParameter('nom',$criteres['nom'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['id'])){
            $qb
                ->$operateur('f.id = :id')
                ->setParameter('id',$criteres['id'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['archive'])){
            $qb
                ->$operateur('f.archive = :archive')
                ->setParameter('archive',$criteres['archive'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['other'])){
            $qb
                ->$operateur('f.email LIKE :other OR '
                    .'f.phone LIKE :other OR '
                    .'f.fax LIKE :other OR '
                    .'f.adresse LIKE :other OR '
                    .'f.cnss LIKE :other OR '
                    .'f.compteBancaire LIKE :other OR '
                    .'f.site LIKE :other')
                ->setParameter('other',"%".$criteres['other']."%")
            ;
        }
        $totalFiltred = $qb->select("COUNT(f)")->getQuery()->getSingleScalarResult();

        $fournisseurs = $qb
            ->select("DISTINCT f")
            ->setFirstResult($start)
            ->setMaxResults($max)
            ->orderBy($sort, $dir)
            ->getQuery()->getResult()
        ;
        return array("total" => $total, "totalFiltred" => $totalFiltred, "fournisseurs" => $fournisseurs);
    }

    function listeDataTableMP(array $criteres, $sort, $dir, $start = 0, $max = 25) {
        $qb = $this->_em->createQueryBuilder();
        $qb
            ->from($this->_entityName, "f")
            ->where('f.typeVente = 1')
        ;

        $total = $qb->select("COUNT(f)")->getQuery()->getSingleScalarResult();
        $operateur = 'andWhere';
        if(isset($criteres['ce'])){
            $qb
                ->$operateur('f.idCE = :ce')
                ->setParameter('ce',$criteres['ce'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['fiscale'])){
            $qb
                ->$operateur('f.idFiscale = :fiscale')
                ->setParameter('fiscale',$criteres['fiscale'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['patente'])){
            $qb
                ->$operateur('f.patente = :patente')
                ->setParameter('patente',$criteres['patente'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['nom'])){
            $qb
                ->$operateur('f.nom = :nom')
                ->setParameter('nom',$criteres['nom'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['id'])){
            $qb
                ->$operateur('f.id = :id')
                ->setParameter('id',$criteres['id'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['archive'])){
            $qb
                ->$operateur('f.archive = :archive')
                ->setParameter('archive',$criteres['archive'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['other'])){
            $qb
                ->$operateur('f.email LIKE :other OR '
                    .'f.phone LIKE :other OR '
                    .'f.fax LIKE :other OR '
                    .'f.adresse LIKE :other OR '
                    .'f.cnss LIKE :other OR '
                    .'f.compteBancaire LIKE :other OR '
                    .'f.site LIKE :other')
                ->setParameter('other',"%".$criteres['other']."%")
            ;
        }
        $totalFiltred = $qb->select("COUNT(f)")->getQuery()->getSingleScalarResult();

        $fournisseurs = $qb
            ->select("DISTINCT f")
            ->setFirstResult($start)
            ->setMaxResults($max)
            ->orderBy($sort, $dir)
            ->getQuery()->getResult()
        ;
        return array("total" => $total, "totalFiltred" => $totalFiltred, "fournisseurs" => $fournisseurs);
    }

    function listeDataTablePI(array $criteres, $sort, $dir, $start = 0, $max = 25) {
        $qb = $this->_em->createQueryBuilder();
        $qb
            ->from($this->_entityName, "f")
            ->where('f.typeVente = 2')
        ;

        $total = $qb->select("COUNT(f)")->getQuery()->getSingleScalarResult();
        $operateur = 'andWhere';
        if(isset($criteres['ce'])){
            $qb
                ->$operateur('f.idCE = :ce')
                ->setParameter('ce',$criteres['ce'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['fiscale'])){
            $qb
                ->$operateur('f.idFiscale = :fiscale')
                ->setParameter('fiscale',$criteres['fiscale'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['patente'])){
            $qb
                ->$operateur('f.patente = :patente')
                ->setParameter('patente',$criteres['patente'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['nom'])){
            $qb
                ->$operateur('f.nom = :nom')
                ->setParameter('nom',$criteres['nom'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['id'])){
            $qb
                ->$operateur('f.id = :id')
                ->setParameter('id',$criteres['id'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['archive'])){
            $qb
                ->$operateur('f.archive = :archive')
                ->setParameter('archive',$criteres['archive'])
            ;
            $operateur = 'andWhere';
        }
        if(isset($criteres['other'])){
            $qb
                ->$operateur('f.email LIKE :other OR '
                    .'f.phone LIKE :other OR '
                    .'f.fax LIKE :other OR '
                    .'f.adresse LIKE :other OR '
                    .'f.cnss LIKE :other OR '
                    .'f.compteBancaire LIKE :other OR '
                    .'f.site LIKE :other')
                ->setParameter('other',"%".$criteres['other']."%")
            ;
        }
        $totalFiltred = $qb->select("COUNT(f)")->getQuery()->getSingleScalarResult();

        $fournisseurs = $qb
            ->select("DISTINCT f")
            ->setFirstResult($start)
            ->setMaxResults($max)
            ->orderBy($sort, $dir)
            ->getQuery()->getResult()
        ;
        return array("total" => $total, "totalFiltred" => $totalFiltred, "fournisseurs" => $fournisseurs);
    }
}
